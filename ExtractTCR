#!/usr/bin/python3

"""Usage:
    ExtractTCR [options] <data>

Options:
    -h, --help
        Show this screen and exit
    --version
        Show version number and exit
    -d <delim>, --delimiter <delim>
        Delimiter to use. Default will be a space
        [default: ,]
    --mean
        Return only mean. Default is to calculate
        both mean and var
    --var
        Return only variance. Default is to calculate
        both mean and var

Arguments:
    <data>
        Finished data file that contains mean conformation
        ratio data for each timestep
"""
VERSION='Beta Version\nAuthor: Alberto Nava'

################################################################
# Importations
################################################################

from docopt import docopt
import os
import pandas as pd

################################################################
# Utilities
################################################################

def readFile(Args):
    """	Arguments:
            Args : dict; CLI arguments given to docopt
        Returns:
            Data : pd dataframe; dataframe containing data
                   information
        Reads data file and returns a pandas dataframe
    """
    if not os.path.exists(Args['<data>']):
        raise SystemExit('File does not exist: {}'.format(Args['<data>']))
    Data = pd.read_csv(Args['<data>'],
                       sep=Args['--delimiter'],
                       header=0)
    return Data
   
################################################################
# Main
################################################################

def main(Args):
    """	Arguments:
            Args : dict; CLI arguments given to docopt
        Returns:
            None
    """
    ############################################################
    # Setup
    ############################################################
    Data = readFile(Args)
    ############################################################
    # Execution
    ############################################################
    Temp, Sp = Args['<data>'].split('_')[0].split('-')
    Mean = Data.Mean_Ratio.mean()
    Var = Data.Var_Ratio.mean()
    if Args['--mean']:
        echo = str(Mean)
    elif Args['--var']:
        echo = str(Var)
    else:
        echo = ','.join(str(value) for value in [Temp,Sp,Mean,Var])
    print(echo)

################################################################
if __name__ == '__main__':
    arguments = docopt(__doc__, version=VERSION)
    main(arguments)
